---
import type { ClassItem, Locale } from '../types';
import IconByName from './IconByName.astro';

export interface Props {
  item: ClassItem;
  locale: Locale;
}

const { item, locale } = Astro.props;
const copy = item.copy[locale];
const isPolish = locale === 'pl';

const levelLabels = {
  pl: {
    podstawy: 'Podstawy',
    wszystkie: 'Wszystkie poziomy',
    zaawansowani: 'Zaawansowani',
    dzieci: 'Dzieci',
    mieszane: 'Mieszane poziomy'
  },
  en: {
    podstawy: 'Basics',
    wszystkie: 'All levels',
    zaawansowani: 'Advanced',
    dzieci: 'Kids',
    mieszane: 'Mixed levels'
  }
};
---

<div class="group relative h-full">
  <!-- Hover background effect -->
  <div class="absolute -inset-2 bg-se-accent/5 opacity-0 group-hover:opacity-100 transition-all duration-300"></div>
  
  <div class="relative h-full p-6 bg-white/70 border border-se-accent shadow-sm hover:shadow-md transition-all duration-300 flex flex-col">
    
    <!-- Header -->
    <div class="flex items-start gap-3 mb-4">
      <div class="flex-shrink-0 mt-1">
        <IconByName name={item.icons.type} class="size-6 text-se-ink" />
      </div>
      <div class="flex-1 min-w-0">
        <h3 class="font-semibold text-xl text-se-ink leading-tight mb-1">{copy.name}</h3>
        <div class="flex items-center gap-3 text-sm text-neutral-600">
          <span class="inline-flex items-center gap-1">
            <IconByName name={item.icons.duration} class="size-4" />
            {item.durationMin} min
          </span>
          <span class="level-chip">
            {levelLabels[locale][item.level]}
          </span>
        </div>
      </div>
    </div>
    
    <!-- Teaser -->
    <p class="text-neutral-700 font-medium text-sm mb-3 italic">"{copy.teaser}"</p>
    
    <!-- Description -->
    <p class="text-neutral-700 text-sm leading-relaxed mb-4 flex-1">{copy.description}</p>
    
    <!-- For Whom Section -->
    {copy.forWhom.length > 0 && (
      <div class="mb-4">
        <h4 class="text-sm font-semibold text-se-ink mb-2">
          {isPolish ? 'Dla kogo' : 'For whom'}
        </h4>
        <ul class="space-y-1">
          {copy.forWhom.map((item) => (
            <li class="text-sm text-neutral-700 flex items-start gap-2">
              <span class="text-se-accent mt-1 flex-shrink-0">✓</span>
              <span>{item}</span>
            </li>
          ))}
        </ul>
      </div>
    )}
    
    <!-- Equipment Section -->
    {item.gear.length > 0 && (
      <div class="mb-4">
        <h4 class="text-sm font-semibold text-se-ink mb-2 inline-flex items-center gap-1">
          <IconByName name={item.icons.gear} class="size-4" />
          {isPolish ? 'Sprzęt' : 'Equipment'}
        </h4>
        <div class="text-sm text-neutral-700">
          <p class="mb-1">{item.gear.join(', ')}</p>
          {copy.gearNote && (
            <p class="text-neutral-600 italic">{copy.gearNote}</p>
          )}
        </div>
      </div>
    )}
    
    <!-- Bottom Divider -->
    <div class="se-divider mt-auto"></div>
  </div>
</div>